<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sakila.mapper.CustomerMapper">
	
	<!-- /on/customerOne : 고객 상세정보 출력 -->
	<select id="selectCustomerOne" parameterType="Integer" resultType="Map">
		SELECT 
			c.customer_id customerId
			, c.first_name firstName
			, c.last_name lastName
			, c.email email
			, a.address address
		FROM customer c INNER JOIN address a
		ON c.address_id = a.address_id
		WHERE c.customer_id = #{customerId}
	</select>

	<!-- /on/addRental : 이름 검색해서 고객리스트 출력 -->
	<select id="selectCustomerListByName" parameterType="String" resultType="com.example.sakila.vo.Customer">
		SELECT
			customer_id customerId
			, first_name firstName
			, last_name lastName
			, email email
		FROM customer
		WHERE ACTIVE = 1 AND
		LOWER(CONCAT(first_name, last_name)) LIKE CONCAT('%',LOWER(#{searchName}),'%')
	</select>
	
	<!-- /on/customerList 고객리스트 총 개수 -->
	<select id="countTotalRow" parameterType="String" resultType="Integer">
		SELECT COUNT(*)
		FROM customer
		<where>
			<if test="searchName != null">
				first_name LIKE CONCAT('%', #{searchName}, '%')		
				OR last_name LIKE CONCAT('%', #{searchName}, '%')
			</if>
		</where>
	</select>
	
	<!-- /on/customerList 고객리스트 출력 -->
	<select id="selectCustomerList" parameterType="Map" resultType="com.example.sakila.vo.Customer">
		SELECT
			customer_id customerId
			, store_id storeId
			, first_name firstName
			, last_name lastName
			, email
			, address_id addressId
			, active
			, create_date createDate
			, last_update lastUpdate
		FROM customer
		<where>	<!-- 동적 쿼리 -->
			<if test="searchName != null">
				first_name LIKE CONCAT('%', #{searchName}, '%')		
				OR last_name LIKE CONCAT('%', #{searchName}, '%')	
			</if>
		</where>
		ORDER BY customer_id DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>

	<!-- /on/addCustomer 고객 추가 -->
	<insert id="insertCustomer" parameterType="com.example.sakila.vo.Customer">
		INSERT INTO customer(store_id, first_name, last_name, email, address_id)
		VALUES(#{storeId}, #{firstName}, #{lastName}, #{email}, #{addressId})
	</insert>
</mapper>